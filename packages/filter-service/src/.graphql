scalar JSON

input FilterOptions {
    language: String
    price: PriceFilter
    format: String
    condition: String
}
input PriceFilter {
    min: Int
    max: Int
}
type Book {
    id: ID
    title: String
    subTitle: String
    author: String
    published: String
    publisher: String
    pages: Int
    description: String
    files: [String]
    condition: String
    language: String
    price: Int
    originalPrice: Int
    status: String
    format: String
    subcategory: String
    category: String
}

type Mutation {
    filterBooks: [Book!]!
}
type Query {
    searchBooks(query: String): [Book]
    getBooksCount: Int!
    filterLanguage(language: String!): [Book!]!
    filterType(type: String!): [Book!]!
    books(page: Int, limit: Int): [Book!]!
    filterPrice(min: Float!, max: Float!): [Book!]!
    filterBooks(payload: FilterOptions!): [Book]
}
